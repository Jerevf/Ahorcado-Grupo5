@model Ahorcado_Grupo5.Models.Jugador
@{
    ViewBag.Title = "Crear Jugador";
}

<div class="crear-jugador-container">
    <a href="@Url.Action("MenuPrincipal", "Home")" class="volver-btn" title="Volver al menú principal">&#8592;</a>
    <span class="titulo-crear">CREAR JUGADOR</span>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger" style="margin-bottom: 1rem; padding: 1rem; border-radius: 8px; background-color: #f8d7da; border: 1px solid #f5c6cb; color: #721c24;">
            <strong>Error:</strong> Por favor, corrige los siguientes errores:
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
    }

    <div class="info-block block-blue">
        <span class="block-icon">&#9432;</span>
        <span class="block-title">Información Requerida</span><br />
        <ul style="margin-bottom:0; margin-top:0.5rem;">
            <li><b>Identificación:</b> Número entero positivo único (ej: número de cédula)</li>
            <li><b>Nombre:</b> Tu nombre completo</li>
        </ul>
    </div>

    @using (Html.BeginForm("CrearJugador", "Home", FormMethod.Post, new { @class = "form-crear-jugador" }))

    {

        <div  class="input-block block-dark">
            <label>Elige tu Avatar</label>
            <div id="avatar-selector">
                <img src="@Url.Content("/Content/images/avatar1.png")" class="avatar-option" data-url="/Content/images/avatar1.png" alt="Avatar 1" />
                <img src="@Url.Content("/Content/images/avatar2.png")" class="avatar-option" data-url="/Content/images/avatar2.png" alt="Avatar 2" />
                <img src="@Url.Content("/Content/images/avatar3.png")" class="avatar-option" data-url="/Content/images/avatar3.png" alt="Avatar 3" />
                <img src="@Url.Content("/Content/images/avatar4.png")" class="avatar-option" data-url="/Content/images/avatar4.png" alt="Avatar 4" />
                <img src="@Url.Content("/Content/images/avatar5.png")" class="avatar-option" data-url="/Content/images/avatar5.png" alt="Avatar 5" />
                <img src="@Url.Content("/Content/images/avatar6.png")" class="avatar-option" data-url="/Content/images/avatar6.png" alt="Avatar 6" />
                <img src="@Url.Content("/Content/images/avatar7.png")" class="avatar-option" data-url="/Content/images/avatar7.png" alt="Avatar 7" />
                <img src="@Url.Content("/Content/images/avatar8.png")" class="avatar-option" data-url="/Content/images/avatar8.png" alt="Avatar 8" />
                <img src="@Url.Content("/Content/images/avatar9.png")" class="avatar-option" data-url="/Content/images/avatar9.png" alt="Avatar 9" />
                <img src="@Url.Content("/Content/images/avatar10.png")" class="avatar-option" data-url="/Content/images/avatar10.png" alt="Avatar 10" />

            </div>
            @Html.HiddenFor(model => model.AvatarUrl, new { id = "AvatarUrl" })
        </div>
        {
            @Html.AntiForgeryToken()

            <div class="input-block block-dark">
                <span class="block-icon">#</span>
                @Html.LabelFor(m => m.Identificacion, "Identificación")
                @Html.TextBoxFor(m => m.Identificacion, new
                {
                    @class = "form-control",
                    type = "number",
                    placeholder = "Ingresa tu número de identificación...",
                    min = "1",
                    max = "999999999",
                    maxlength = "9",
                    required = "required"
                })
                @Html.ValidationMessageFor(m => m.Identificacion, "", new { @class = "text-danger" })
                <small>Número entero positivo único (máximo 9 dígitos)</small>
            </div>

            <div class="input-block block-dark">
                <span class="block-icon">&#128100;</span>
                @Html.LabelFor(m => m.Nombre, "Nombre del Jugador")
                @Html.TextBoxFor(m => m.Nombre, new
                {
                    @class = "form-control",
                    type = "text",
                    placeholder = "Ingresa tu nombre completo...",
                    maxlength = "50",
                    required = "required"
                })
                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                <small id="char-count">0/50 caracteres</small>
            </div>

            <div class="preview-block block-purple">
                <span class="block-title">Vista Previa del Jugador</span>
                <div class="preview-content">
                    <span class="preview-icon">&#127918;</span>
                    <div>
                        <div class="jugador-nombre" id="preview-nombre">Tu Nombre</div>
                        <div class="jugador-id" id="preview-id">ID: Tu Identificación</div>
                        <div class="jugador-marcador">Marcador: 0 puntos</div>
                    </div>
                </div>
            </div>

            <div class="puntuacion-block block-orange">
                <span class="block-title">Sistema de Puntuación</span>
                <div class="puntuacion-cols">
                    <div>
                        <b>Partidas Ganadas:</b><br />
                        Fácil: +1 punto<br />
                        Normal: +2 puntos<br />
                        Difícil: +3 puntos
                    </div>
                    <div>
                        <b>Partidas Perdidas:</b><br />
                        Fácil: -1 punto<br />
                        Normal: -2 puntos<br />
                        Difícil: -3 puntos
                    </div>
                </div>
                <small>Nota: El marcador puede ser negativo si pierdes más partidas de las que ganas.</small>
            </div>
            <div class="form-group">
                <button class="crear-btn" type="submit">
                    <span style="font-size:1.3rem;">&#128100;</span> CREAR JUGADOR
                </button>
            </div>
        }

        <script>
            // Actualizar vista previa en tiempo real y contador de caracteres
            const nombreInput = document.getElementById('Nombre');
            const idInput = document.getElementById('Identificacion');
            const previewNombre = document.getElementById('preview-nombre');
            const previewId = document.getElementById('preview-id');
            const charCount = document.getElementById('char-count');

            nombreInput.addEventListener('input', function () {
                previewNombre.textContent = nombreInput.value || 'Tu Nombre';
                charCount.textContent = nombreInput.value.length + '/50 caracteres';
            });

            idInput.addEventListener('input', function () {
                previewId.textContent = idInput.value ? `ID: ${idInput.value}` : 'ID: Tu Identificación';
            });

            // Validación del lado del cliente
            document.querySelector('.form-crear-jugador').addEventListener('submit', function (e) {
                const identificacion = document.getElementById('Identificacion').value;
                const nombre = document.getElementById('Nombre').value.trim();

                // Validar identificación
                if (!identificacion || identificacion <= 0) {
                    e.preventDefault();
                    alert('La identificación debe ser un número entero positivo.');
                    return false;
                }

                // Validar nombre
                if (!nombre) {
                    e.preventDefault();
                    alert('El nombre es obligatorio.');
                    return false;
                }

                if (nombre.length > 50) {
                    e.preventDefault();
                    alert('El nombre no puede exceder 50 caracteres.');
                    return false;
                }

                return true;
            });
        </script>

        @section Scripts {
            <style>

                .avatar-option {
                    width: 60px;
                    height: 60px;
                    border: 3px solid transparent;
                    border-radius: 50%;
                    cursor: pointer;
                    transition: all 0.2s ease-in-out;
                }

                    .avatar-option:hover {
                        transform: scale(1.1);
                    }

                    .avatar-option.selected {
                        border-color: #007bff; /* O el color que prefieras */
                        transform: scale(1.1);
                    }
            </style>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const selector = document.getElementById('avatar-selector');
                    const hiddenInput = document.getElementById('AvatarUrl');

                    selector.addEventListener('click', function (e) {
                        // Se asegura de que se hizo clic en una imagen de avatar
                        if (e.target.classList.contains('avatar-option')) {
                            // Quitar la selección de los otros avatares
                            document.querySelectorAll('.avatar-option').forEach(img => img.classList.remove('selected'));

                            // Seleccionar el avatar clickeado
                            const selectedAvatar = e.target;
                            selectedAvatar.classList.add('selected');

                            // Guardar la ruta de la imagen en el campo oculto
                            hiddenInput.value = selectedAvatar.dataset.url;
                        }
                    });
                });
            </script>
        }
    }

</div>